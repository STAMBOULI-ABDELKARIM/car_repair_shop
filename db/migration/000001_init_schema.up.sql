/*CREATE TABLE "customers" (
	  "id" bigserial PRIMARY KEY,
	  "full_name" varchar NOT NULL,
	  "phone_number" varchar NOT NULL,
	  "created_at" timestamptz NOT NULL DEFAULT (now())
	);
	CREATE INDEX ON "customers" ("full_name");
	*/

CREATE TABLE SUPPLIERS (
    ID INT NOT NULL,
    NAME VARCHAR(255) UNIQUE NOT NULL,
    ADDRESS VARCHAR(255),
    PHONE_NUMBER VARCHAR(255) UNIQUE NOT NULL,
    PRIMARY KEY (ID)
);

CREATE INDEX SUPPLIER_NAME_IDX ON SUPPLIERS(NAME);

CREATE TABLE PURCHASE_INVOICES (
    ID INT NOT NULL,
    SUPPLIER_ID INT NOT NULL,
    REF VARCHAR(255) NOT NULL,
    date DATE,
    PRIMARY KEY (ID),
    FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIERS (ID) ON DELETE RESTRICT
);

CREATE TABLE PARTS (
    ID INT NOT NULL,
    NAME VARCHAR(255) UNIQUE NOT NULL,
    DESCRIPTION VARCHAR(255) NOT NULL,
    RETAIL_PRICE decimal NOT NULL CHECK (RETAIL_PRICE > 0),
    PRIMARY KEY (ID)
);

CREATE TABLE PURCHASE_DETAILS (
    ID INT NOT NULL,
    PART_ID INT NOT NULL,
    PURCHASE_INVOICE_ID INT NOT NULL,
    QUANTITY INT NOT NULL,
    PRICE decimal NOT NULL CHECK (PRICE > 0),
    FOREIGN KEY (PART_ID) REFERENCES PARTS (ID) ON DELETE CASCADE,
    FOREIGN KEY (PURCHASE_INVOICE_ID) REFERENCES PURCHASE_INVOICES (ID) ON DELETE CASCADE,
    UNIQUE (
        PART_ID,
        PURCHASE_INVOICE_ID
    )
);

CREATE TABLE CUSTOMERS (
    ID BIGSERIAL NOT NULL,
    FULL_NAME VARCHAR(255) NOT NULL,
    PHONE_NUMBER VARCHAR(255) UNIQUE NOT NULL,
    CREATED_AT timestamptz NOT NULL DEFAULT (now()),
    PRIMARY KEY (ID)
);

CREATE TABLE CARS (
    ID INT NOT NULL,
    CUSTOMER_ID INT NOT NULL,
    REGISTRAION_NUMBER VARCHAR(255) UNIQUE NOT NULL,
    MAKE VARCHAR(255) NOT NULL,
    MODEL VARCHAR(255) NOT NULL,
    YEAR VARCHAR(255) NOT NULL,
    ENERGY VARCHAR(255) NOT NULL,
    PRIMARY KEY (ID),
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS (ID) ON DELETE CASCADE
);

CREATE TABLE SERVICE_ORDERS (
    ID INT NOT NULL,
    CAR_ID INT NOT NULL,
    DESCRIPTION VARCHAR (255),
    DATE_RECEIVED DATE,
    DATE_RETURNED DATE,
    STATE INT NOT NULL,
    PRIMARY KEY (ID),
    FOREIGN KEY (CAR_ID) REFERENCES CARS (ID) ON DELETE CASCADE
);

CREATE TABLE PART_DETAILS (
    ID INT NOT NULL,
    PART_ID INT NOT NULL,
    SERVICE_ORDER_ID INT NOT NULL,
    QUANTITY INT NOT NULL CHECK (QUANTITY > 0),
    PRICE decimal CHECK (PRICE > 0),
    PRIMARY KEY (ID),
    FOREIGN KEY (PART_ID) REFERENCES PARTS (ID) ON DELETE CASCADE,
    FOREIGN KEY (SERVICE_ORDER_ID) REFERENCES SERVICE_ORDERS (ID) ON DELETE CASCADE,
    UNIQUE (PART_ID, SERVICE_ORDER_ID)
);

CREATE TABLE MECHANICS (
    ID INT NOT NULL,
    FULL_NAME VARCHAR(255) UNIQUE NOT NULL,
    PRIMARY KEY (ID)
);

CREATE TABLE MECHANIC_DETAILS (
    ID INT NOT NULL,
    MECHANIC_ID INT NOT NULL,
    SERVICE_ORDER_ID INT NOT NULL,
    PRIMARY KEY (ID),
    FOREIGN KEY (MECHANIC_ID) REFERENCES MECHANICS (ID) ON DELETE CASCADE,
    FOREIGN KEY (SERVICE_ORDER_ID) REFERENCES SERVICE_ORDERS (ID) ON DELETE CASCADE,
    UNIQUE (
        MECHANIC_ID,
        SERVICE_ORDER_ID
    )
);

CREATE TABLE SERVICES (
    ID INT NOT NULL,
    NAME VARCHAR(255) UNIQUE NOT NULL,
    DESCRIPTION VARCHAR(255) NOT NULL,
    ESTIMATION_TIME INT NOT NULL,
    MIN_PRICE decimal CHECK (MIN_PRICE > 0),
    MAX_PRICE decimal CHECK (MAX_PRICE > 0),
    PRIMARY KEY (ID),
    CHECK (MAX_PRICE > MIN_PRICE)
);

CREATE TABLE SERVICE_DETAILS (
    ID INT NOT NULL,
    SERVICE_ID INT NOT NULL,
    SERVICE_ORDER_ID INT NOT NULL,
    PRICE decimal CHECK (PRICE > 0),
    STATE INT NOT NULL,
    PRIMARY KEY (ID),
    FOREIGN KEY (SERVICE_ID) REFERENCES SERVICES (ID) ON DELETE CASCADE,
    FOREIGN KEY (SERVICE_ORDER_ID) REFERENCES SERVICE_ORDERS (ID) ON DELETE CASCADE,
    UNIQUE (
        SERVICE_ID,
        SERVICE_ORDER_ID
    )
);

CREATE TABLE SALE_INVOICES (
    ID INT NOT NULL,
    SERVICE_ORDER_ID INT NOT NULL,
    date DATE,
    REF VARCHAR (255) UNIQUE NOT NULL,
    PRIMARY KEY (ID),
    FOREIGN KEY (SERVICE_ORDER_ID) REFERENCES SERVICE_ORDERS (ID) ON DELETE CASCADE
);

CREATE TABLE PAYMENTS (
    ID INT NOT NULL,
    SALE_INVOICE_ID INT NOT NULL,
    AMOUNT decimal CHECK (AMOUNT > 0),
    date DATE,
    PRIMARY KEY (ID),
    FOREIGN KEY (SALE_INVOICE_ID) REFERENCES SALE_INVOICES (ID) ON DELETE CASCADE
);